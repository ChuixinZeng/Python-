# -*- coding:utf-8 -*-

# Author:Chuixin Zeng

# 贪吃蛇游戏，自己咬自己
# 如果一个函数在内部调用其本身，这个函数就是递归函数

'''
递归特性:
1. 必须有一个明确的结束条件
2. 每次进入更深一层递归时，问题规模相比上次递归都应有所减少
3. 递归效率不高，递归层次过多会导致栈溢出（在计算机中，函数调用是通过栈（stack）这种数据结构实现的，
每当进入一个函数调用，栈就会加一层栈帧，每当函数返回，栈就会减一层栈帧。由于栈的大小不是无限的，
所以，递归调用的次数过多，会导致栈溢出）
堆栈扫盲http://www.cnblogs.com/lln7777/archive/2012/03/14/2396164.html
'''
'''
def calc(n):

    print(n)
    return calc(n+1) # 返回的时候调用了自己，然后自己又执行了，变成一个死循环了
calc(0) # 默认最大递归的次数应该是999层，如果不停止，机器就崩溃了，这是程序的保护机制
'''

def calc(n):
    print(n)
    if int(n/2) > 0:
        return calc(int(n/2))
    print("->",n) # 最后一次执行的结果
calc(10)

