### 模块定义

- 用来逻辑上组织Python代码（变量，函数，类，逻辑：实现一个功能），本质就是.py结尾的文件
- 举个例子：文件名叫test.py，对应的模块名是test

### package包的定义

- 本质就是一个目录，必须带有一个叫__init__.py的文件
- 用来从逻辑上组织模块的，下面可以放一堆模块

### 导入方法

##### 1. 导入模块

- import module_name
- import module_name1,moudule_name2,module_name3(导入多个模块)
- from module_alex import * (导入module_alex里面所有的代码，不建议使用这种，容易产生名称冲突)
- from module_alex import m1,m2,m3(相当于只导入模块里面的m1,m2,m3)
- from module_alex import logger as logger_alex

##### 2. 导入包

- import package_test

### import的本质（路径搜索和搜索路径）

##### 1. import module

- 相当于module_alex.py所有的代码解释完了之后都赋给了module_alex变量 （module_alex = 所有代码）
- 调用方法就是module_alex.name module_alex.logger()

##### 2. from module import name

- 相当于只把模块里面的name变量放到了当前文件的位置进行解释执行

##### 3. 本质

- 导入模块的本质就是把py文件解释一遍
- 导入包的本质就是去解释包下面的init.py文件

### 导入优化

- 参考github第五天笔记

### 模块的分类（三大类）

- 标准库（内置模块），例如sys,os模块

	1. time与datetime

- 开源模块（第三方模块）
- 自定义模块，前面讲的就是自定义模块

